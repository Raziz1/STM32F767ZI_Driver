
STM32F767ZI_Driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000548  080001f8  080001f8  000101f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000740  08000748  00010748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000740  08000740  00010748  2**0
                  CONTENTS
  4 .ARM          00000000  08000740  08000740  00010748  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000740  08000748  00010748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000740  08000740  00010740  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000744  08000744  00010744  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000748  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000748  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010748  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010772  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000081d  00000000  00000000  000107b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000278  00000000  00000000  00010fd2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  00011250  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000072  00000000  00000000  000112f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000017a3  00000000  00000000  0001136a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000de2  00000000  00000000  00012b0d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000058e4  00000000  00000000  000138ef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000001d4  00000000  00000000  000191d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000a5  00000000  00000000  000193a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	; (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	; (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	08000728 	.word	0x08000728

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	; (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	; (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	; (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	08000728 	.word	0x08000728

08000238 <delay>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void delay(void)
{
 8000238:	b480      	push	{r7}
 800023a:	b083      	sub	sp, #12
 800023c:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 500000; i++);
 800023e:	2300      	movs	r3, #0
 8000240:	607b      	str	r3, [r7, #4]
 8000242:	e002      	b.n	800024a <delay+0x12>
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	3301      	adds	r3, #1
 8000248:	607b      	str	r3, [r7, #4]
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	4a04      	ldr	r2, [pc, #16]	; (8000260 <delay+0x28>)
 800024e:	4293      	cmp	r3, r2
 8000250:	d9f8      	bls.n	8000244 <delay+0xc>
}
 8000252:	bf00      	nop
 8000254:	bf00      	nop
 8000256:	370c      	adds	r7, #12
 8000258:	46bd      	mov	sp, r7
 800025a:	bc80      	pop	{r7}
 800025c:	4770      	bx	lr
 800025e:	bf00      	nop
 8000260:	0007a11f 	.word	0x0007a11f

08000264 <main>:

int main(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	b084      	sub	sp, #16
 8000268:	af00      	add	r7, sp, #0
	GPIO_Handle_t Gpioled;
	Gpioled.pGPIOx = GPIOD;
 800026a:	4b0d      	ldr	r3, [pc, #52]	; (80002a0 <main+0x3c>)
 800026c:	607b      	str	r3, [r7, #4]
	Gpioled.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800026e:	230c      	movs	r3, #12
 8000270:	723b      	strb	r3, [r7, #8]
	Gpioled.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000272:	2301      	movs	r3, #1
 8000274:	727b      	strb	r3, [r7, #9]
	Gpioled.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 8000276:	2302      	movs	r3, #2
 8000278:	72bb      	strb	r3, [r7, #10]
	Gpioled.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800027a:	2300      	movs	r3, #0
 800027c:	733b      	strb	r3, [r7, #12]
	Gpioled.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800027e:	2300      	movs	r3, #0
 8000280:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000282:	2101      	movs	r1, #1
 8000284:	4806      	ldr	r0, [pc, #24]	; (80002a0 <main+0x3c>)
 8000286:	f000 f837 	bl	80002f8 <GPIO_PeriClockControl>
	GPIO_Init(&Gpioled);
 800028a:	1d3b      	adds	r3, r7, #4
 800028c:	4618      	mov	r0, r3
 800028e:	f000 f94b 	bl	8000528 <GPIO_Init>

	while (1)
	{
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000292:	210c      	movs	r1, #12
 8000294:	4802      	ldr	r0, [pc, #8]	; (80002a0 <main+0x3c>)
 8000296:	f000 fa0f 	bl	80006b8 <GPIO_ToggleOutputPin>
		delay();
 800029a:	f7ff ffcd 	bl	8000238 <delay>
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 800029e:	e7f8      	b.n	8000292 <main+0x2e>
 80002a0:	40020c00 	.word	0x40020c00

080002a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a4:	480d      	ldr	r0, [pc, #52]	; (80002dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ac:	480c      	ldr	r0, [pc, #48]	; (80002e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ae:	490d      	ldr	r1, [pc, #52]	; (80002e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b0:	4a0d      	ldr	r2, [pc, #52]	; (80002e8 <LoopForever+0xe>)
  movs r3, #0
 80002b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b4:	e002      	b.n	80002bc <LoopCopyDataInit>

080002b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ba:	3304      	adds	r3, #4

080002bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c0:	d3f9      	bcc.n	80002b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c2:	4a0a      	ldr	r2, [pc, #40]	; (80002ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c4:	4c0a      	ldr	r4, [pc, #40]	; (80002f0 <LoopForever+0x16>)
  movs r3, #0
 80002c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c8:	e001      	b.n	80002ce <LoopFillZerobss>

080002ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002cc:	3204      	adds	r2, #4

080002ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d0:	d3fb      	bcc.n	80002ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002d2:	f000 fa05 	bl	80006e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d6:	f7ff ffc5 	bl	8000264 <main>

080002da <LoopForever>:

LoopForever:
  b LoopForever
 80002da:	e7fe      	b.n	80002da <LoopForever>
  ldr   r0, =_estack
 80002dc:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 80002e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e8:	08000748 	.word	0x08000748
  ldr r2, =_sbss
 80002ec:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f0:	2000001c 	.word	0x2000001c

080002f4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f4:	e7fe      	b.n	80002f4 <ADC_IRQHandler>
	...

080002f8 <GPIO_PeriClockControl>:
 * @return				- none
 *
 * @Note 				- none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002f8:	b480      	push	{r7}
 80002fa:	b083      	sub	sp, #12
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	6078      	str	r0, [r7, #4]
 8000300:	460b      	mov	r3, r1
 8000302:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 8000304:	78fb      	ldrb	r3, [r7, #3]
 8000306:	2b01      	cmp	r3, #1
 8000308:	d178      	bne.n	80003fc <GPIO_PeriClockControl+0x104>
	{
		if (pGPIOx == GPIOA)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a7a      	ldr	r2, [pc, #488]	; (80004f8 <GPIO_PeriClockControl+0x200>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000312:	4b7a      	ldr	r3, [pc, #488]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000314:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000316:	4a79      	ldr	r2, [pc, #484]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000318:	f043 0301 	orr.w	r3, r3, #1
 800031c:	6313      	str	r3, [r2, #48]	; 0x30
		else if (pGPIOx == GPIOK)
		{
			GPIOK_PCLK_DI();
		}
	}
}
 800031e:	e0e5      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOB)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a77      	ldr	r2, [pc, #476]	; (8000500 <GPIO_PeriClockControl+0x208>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000328:	4b74      	ldr	r3, [pc, #464]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800032a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032c:	4a73      	ldr	r2, [pc, #460]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800032e:	f043 0302 	orr.w	r3, r3, #2
 8000332:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000334:	e0da      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOC)
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a72      	ldr	r2, [pc, #456]	; (8000504 <GPIO_PeriClockControl+0x20c>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800033e:	4b6f      	ldr	r3, [pc, #444]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000342:	4a6e      	ldr	r2, [pc, #440]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000344:	f043 0304 	orr.w	r3, r3, #4
 8000348:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034a:	e0cf      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOD)
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a6e      	ldr	r2, [pc, #440]	; (8000508 <GPIO_PeriClockControl+0x210>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000354:	4b69      	ldr	r3, [pc, #420]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000358:	4a68      	ldr	r2, [pc, #416]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800035a:	f043 0308 	orr.w	r3, r3, #8
 800035e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000360:	e0c4      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOE)
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a69      	ldr	r2, [pc, #420]	; (800050c <GPIO_PeriClockControl+0x214>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800036a:	4b64      	ldr	r3, [pc, #400]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800036c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036e:	4a63      	ldr	r2, [pc, #396]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000370:	f043 0310 	orr.w	r3, r3, #16
 8000374:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000376:	e0b9      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOF)
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a65      	ldr	r2, [pc, #404]	; (8000510 <GPIO_PeriClockControl+0x218>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000380:	4b5e      	ldr	r3, [pc, #376]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000384:	4a5d      	ldr	r2, [pc, #372]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000386:	f043 0320 	orr.w	r3, r3, #32
 800038a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038c:	e0ae      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOG)
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a60      	ldr	r2, [pc, #384]	; (8000514 <GPIO_PeriClockControl+0x21c>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000396:	4b59      	ldr	r3, [pc, #356]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039a:	4a58      	ldr	r2, [pc, #352]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800039c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003a0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a2:	e0a3      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOH)
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a5c      	ldr	r2, [pc, #368]	; (8000518 <GPIO_PeriClockControl+0x220>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d106      	bne.n	80003ba <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80003ac:	4b53      	ldr	r3, [pc, #332]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80003ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b0:	4a52      	ldr	r2, [pc, #328]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80003b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003b6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b8:	e098      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOI)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a57      	ldr	r2, [pc, #348]	; (800051c <GPIO_PeriClockControl+0x224>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d106      	bne.n	80003d0 <GPIO_PeriClockControl+0xd8>
			GPIOI_PCLK_EN();
 80003c2:	4b4e      	ldr	r3, [pc, #312]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80003c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c6:	4a4d      	ldr	r2, [pc, #308]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80003c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003cc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ce:	e08d      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOJ)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a53      	ldr	r2, [pc, #332]	; (8000520 <GPIO_PeriClockControl+0x228>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d106      	bne.n	80003e6 <GPIO_PeriClockControl+0xee>
			GPIOJ_PCLK_EN();
 80003d8:	4b48      	ldr	r3, [pc, #288]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003dc:	4a47      	ldr	r2, [pc, #284]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80003de:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80003e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e4:	e082      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOK)
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4a4e      	ldr	r2, [pc, #312]	; (8000524 <GPIO_PeriClockControl+0x22c>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d17e      	bne.n	80004ec <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_EN();
 80003ee:	4b43      	ldr	r3, [pc, #268]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80003f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f2:	4a42      	ldr	r2, [pc, #264]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80003f4:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80003f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fa:	e077      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		if (pGPIOx == GPIOA)
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	4a3e      	ldr	r2, [pc, #248]	; (80004f8 <GPIO_PeriClockControl+0x200>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d106      	bne.n	8000412 <GPIO_PeriClockControl+0x11a>
			GPIOA_PCLK_DI();
 8000404:	4b3d      	ldr	r3, [pc, #244]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000406:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000408:	4a3c      	ldr	r2, [pc, #240]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800040a:	f023 0301 	bic.w	r3, r3, #1
 800040e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000410:	e06c      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOB)
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a3a      	ldr	r2, [pc, #232]	; (8000500 <GPIO_PeriClockControl+0x208>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d106      	bne.n	8000428 <GPIO_PeriClockControl+0x130>
			GPIOB_PCLK_DI();
 800041a:	4b38      	ldr	r3, [pc, #224]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041e:	4a37      	ldr	r2, [pc, #220]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000420:	f023 0302 	bic.w	r3, r3, #2
 8000424:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000426:	e061      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOC)
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a36      	ldr	r2, [pc, #216]	; (8000504 <GPIO_PeriClockControl+0x20c>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d106      	bne.n	800043e <GPIO_PeriClockControl+0x146>
			GPIOC_PCLK_DI();
 8000430:	4b32      	ldr	r3, [pc, #200]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000434:	4a31      	ldr	r2, [pc, #196]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000436:	f023 0304 	bic.w	r3, r3, #4
 800043a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043c:	e056      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOD)
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4a31      	ldr	r2, [pc, #196]	; (8000508 <GPIO_PeriClockControl+0x210>)
 8000442:	4293      	cmp	r3, r2
 8000444:	d106      	bne.n	8000454 <GPIO_PeriClockControl+0x15c>
			GPIOD_PCLK_DI();
 8000446:	4b2d      	ldr	r3, [pc, #180]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800044a:	4a2c      	ldr	r2, [pc, #176]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800044c:	f023 0308 	bic.w	r3, r3, #8
 8000450:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000452:	e04b      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOE)
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	4a2d      	ldr	r2, [pc, #180]	; (800050c <GPIO_PeriClockControl+0x214>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d106      	bne.n	800046a <GPIO_PeriClockControl+0x172>
			GPIOE_PCLK_DI();
 800045c:	4b27      	ldr	r3, [pc, #156]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800045e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000460:	4a26      	ldr	r2, [pc, #152]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000462:	f023 0310 	bic.w	r3, r3, #16
 8000466:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000468:	e040      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOF)
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	4a28      	ldr	r2, [pc, #160]	; (8000510 <GPIO_PeriClockControl+0x218>)
 800046e:	4293      	cmp	r3, r2
 8000470:	d106      	bne.n	8000480 <GPIO_PeriClockControl+0x188>
			GPIOF_PCLK_DI();
 8000472:	4b22      	ldr	r3, [pc, #136]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000474:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000476:	4a21      	ldr	r2, [pc, #132]	; (80004fc <GPIO_PeriClockControl+0x204>)
 8000478:	f023 0320 	bic.w	r3, r3, #32
 800047c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047e:	e035      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOG)
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	4a24      	ldr	r2, [pc, #144]	; (8000514 <GPIO_PeriClockControl+0x21c>)
 8000484:	4293      	cmp	r3, r2
 8000486:	d106      	bne.n	8000496 <GPIO_PeriClockControl+0x19e>
			GPIOG_PCLK_DI();
 8000488:	4b1c      	ldr	r3, [pc, #112]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800048a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800048c:	4a1b      	ldr	r2, [pc, #108]	; (80004fc <GPIO_PeriClockControl+0x204>)
 800048e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000492:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000494:	e02a      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOH)
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	4a1f      	ldr	r2, [pc, #124]	; (8000518 <GPIO_PeriClockControl+0x220>)
 800049a:	4293      	cmp	r3, r2
 800049c:	d106      	bne.n	80004ac <GPIO_PeriClockControl+0x1b4>
			GPIOH_PCLK_DI();
 800049e:	4b17      	ldr	r3, [pc, #92]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80004a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a2:	4a16      	ldr	r2, [pc, #88]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80004a4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80004a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004aa:	e01f      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOI)
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	4a1b      	ldr	r2, [pc, #108]	; (800051c <GPIO_PeriClockControl+0x224>)
 80004b0:	4293      	cmp	r3, r2
 80004b2:	d106      	bne.n	80004c2 <GPIO_PeriClockControl+0x1ca>
			GPIOI_PCLK_DI();
 80004b4:	4b11      	ldr	r3, [pc, #68]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80004b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b8:	4a10      	ldr	r2, [pc, #64]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80004ba:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80004be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004c0:	e014      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOJ)
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	4a16      	ldr	r2, [pc, #88]	; (8000520 <GPIO_PeriClockControl+0x228>)
 80004c6:	4293      	cmp	r3, r2
 80004c8:	d106      	bne.n	80004d8 <GPIO_PeriClockControl+0x1e0>
			GPIOJ_PCLK_DI();
 80004ca:	4b0c      	ldr	r3, [pc, #48]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80004cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ce:	4a0b      	ldr	r2, [pc, #44]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80004d0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80004d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004d6:	e009      	b.n	80004ec <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOK)
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	4a12      	ldr	r2, [pc, #72]	; (8000524 <GPIO_PeriClockControl+0x22c>)
 80004dc:	4293      	cmp	r3, r2
 80004de:	d105      	bne.n	80004ec <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_DI();
 80004e0:	4b06      	ldr	r3, [pc, #24]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80004e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e4:	4a05      	ldr	r2, [pc, #20]	; (80004fc <GPIO_PeriClockControl+0x204>)
 80004e6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80004ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ec:	bf00      	nop
 80004ee:	370c      	adds	r7, #12
 80004f0:	46bd      	mov	sp, r7
 80004f2:	bc80      	pop	{r7}
 80004f4:	4770      	bx	lr
 80004f6:	bf00      	nop
 80004f8:	40020000 	.word	0x40020000
 80004fc:	40023800 	.word	0x40023800
 8000500:	40020400 	.word	0x40020400
 8000504:	40020800 	.word	0x40020800
 8000508:	40020c00 	.word	0x40020c00
 800050c:	40021000 	.word	0x40021000
 8000510:	40021400 	.word	0x40021400
 8000514:	40021800 	.word	0x40021800
 8000518:	40021c00 	.word	0x40021c00
 800051c:	40022000 	.word	0x40022000
 8000520:	40022400 	.word	0x40022400
 8000524:	40022800 	.word	0x40022800

08000528 <GPIO_Init>:
 * @return				- none
 *
 * @Note 				- none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000528:	b480      	push	{r7}
 800052a:	b085      	sub	sp, #20
 800052c:	af00      	add	r7, sp, #0
 800052e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000530:	2300      	movs	r3, #0
 8000532:	60fb      	str	r3, [r7, #12]
	//1. Configure the mode of the GPIO pin
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	795b      	ldrb	r3, [r3, #5]
 8000538:	2b03      	cmp	r3, #3
 800053a:	d81e      	bhi.n	800057a <GPIO_Init+0x52>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	795b      	ldrb	r3, [r3, #5]
 8000540:	461a      	mov	r2, r3
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	791b      	ldrb	r3, [r3, #4]
 8000546:	005b      	lsls	r3, r3, #1
 8000548:	fa02 f303 	lsl.w	r3, r2, r3
 800054c:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	689a      	ldr	r2, [r3, #8]
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	791b      	ldrb	r3, [r3, #4]
 8000558:	4619      	mov	r1, r3
 800055a:	2303      	movs	r3, #3
 800055c:	408b      	lsls	r3, r1
 800055e:	43db      	mvns	r3, r3
 8000560:	4619      	mov	r1, r3
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	400a      	ands	r2, r1
 8000568:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->MODER |= temp; //Setting
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	6819      	ldr	r1, [r3, #0]
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	68fa      	ldr	r2, [r7, #12]
 8000576:	430a      	orrs	r2, r1
 8000578:	601a      	str	r2, [r3, #0]
	}
	else /* Interrupt mode */
	{

	}
	temp = 0;
 800057a:	2300      	movs	r3, #0
 800057c:	60fb      	str	r3, [r7, #12]

	//2. Configure the speed of the GPIO pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	799b      	ldrb	r3, [r3, #6]
 8000582:	461a      	mov	r2, r3
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	005b      	lsls	r3, r3, #1
 800058a:	fa02 f303 	lsl.w	r3, r2, r3
 800058e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	689a      	ldr	r2, [r3, #8]
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	4619      	mov	r1, r3
 800059c:	2303      	movs	r3, #3
 800059e:	408b      	lsls	r3, r1
 80005a0:	43db      	mvns	r3, r3
 80005a2:	4619      	mov	r1, r3
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	400a      	ands	r2, r1
 80005aa:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	6899      	ldr	r1, [r3, #8]
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	68fa      	ldr	r2, [r7, #12]
 80005b8:	430a      	orrs	r2, r1
 80005ba:	609a      	str	r2, [r3, #8]
	temp = 0;
 80005bc:	2300      	movs	r3, #0
 80005be:	60fb      	str	r3, [r7, #12]

	//3. Configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	79db      	ldrb	r3, [r3, #7]
 80005c4:	461a      	mov	r2, r3
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	005b      	lsls	r3, r3, #1
 80005cc:	fa02 f303 	lsl.w	r3, r2, r3
 80005d0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	68da      	ldr	r2, [r3, #12]
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	791b      	ldrb	r3, [r3, #4]
 80005dc:	4619      	mov	r1, r3
 80005de:	2303      	movs	r3, #3
 80005e0:	408b      	lsls	r3, r1
 80005e2:	43db      	mvns	r3, r3
 80005e4:	4619      	mov	r1, r3
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	400a      	ands	r2, r1
 80005ec:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	68d9      	ldr	r1, [r3, #12]
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	68fa      	ldr	r2, [r7, #12]
 80005fa:	430a      	orrs	r2, r1
 80005fc:	60da      	str	r2, [r3, #12]
	temp = 0;
 80005fe:	2300      	movs	r3, #0
 8000600:	60fb      	str	r3, [r7, #12]

	//4. Configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	7a1b      	ldrb	r3, [r3, #8]
 8000606:	461a      	mov	r2, r3
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	791b      	ldrb	r3, [r3, #4]
 800060c:	fa02 f303 	lsl.w	r3, r2, r3
 8000610:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	685a      	ldr	r2, [r3, #4]
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	791b      	ldrb	r3, [r3, #4]
 800061c:	4619      	mov	r1, r3
 800061e:	2301      	movs	r3, #1
 8000620:	408b      	lsls	r3, r1
 8000622:	43db      	mvns	r3, r3
 8000624:	4619      	mov	r1, r3
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	400a      	ands	r2, r1
 800062c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	6859      	ldr	r1, [r3, #4]
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	68fa      	ldr	r2, [r7, #12]
 800063a:	430a      	orrs	r2, r1
 800063c:	605a      	str	r2, [r3, #4]
	temp = 0;
 800063e:	2300      	movs	r3, #0
 8000640:	60fb      	str	r3, [r7, #12]

	//5. Configure the alt function
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	795b      	ldrb	r3, [r3, #5]
 8000646:	2b02      	cmp	r3, #2
 8000648:	d131      	bne.n	80006ae <GPIO_Init+0x186>
	{
		//Configure the alt function registers
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	791b      	ldrb	r3, [r3, #4]
 800064e:	08db      	lsrs	r3, r3, #3
 8000650:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	791b      	ldrb	r3, [r3, #4]
 8000656:	f003 0307 	and.w	r3, r3, #7
 800065a:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	7afa      	ldrb	r2, [r7, #11]
 8000662:	3208      	adds	r2, #8
 8000664:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000668:	7abb      	ldrb	r3, [r7, #10]
 800066a:	009b      	lsls	r3, r3, #2
 800066c:	220f      	movs	r2, #15
 800066e:	fa02 f303 	lsl.w	r3, r2, r3
 8000672:	43db      	mvns	r3, r3
 8000674:	4618      	mov	r0, r3
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	681b      	ldr	r3, [r3, #0]
 800067a:	7afa      	ldrb	r2, [r7, #11]
 800067c:	4001      	ands	r1, r0
 800067e:	3208      	adds	r2, #8
 8000680:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	7afa      	ldrb	r2, [r7, #11]
 800068a:	3208      	adds	r2, #8
 800068c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	7a5b      	ldrb	r3, [r3, #9]
 8000694:	461a      	mov	r2, r3
 8000696:	7abb      	ldrb	r3, [r7, #10]
 8000698:	009b      	lsls	r3, r3, #2
 800069a:	fa02 f303 	lsl.w	r3, r2, r3
 800069e:	4618      	mov	r0, r3
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	7afa      	ldrb	r2, [r7, #11]
 80006a6:	4301      	orrs	r1, r0
 80006a8:	3208      	adds	r2, #8
 80006aa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80006ae:	bf00      	nop
 80006b0:	3714      	adds	r7, #20
 80006b2:	46bd      	mov	sp, r7
 80006b4:	bc80      	pop	{r7}
 80006b6:	4770      	bx	lr

080006b8 <GPIO_ToggleOutputPin>:
 * @return				- none
 *
 * @Note 				- none
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006b8:	b480      	push	{r7}
 80006ba:	b083      	sub	sp, #12
 80006bc:	af00      	add	r7, sp, #0
 80006be:	6078      	str	r0, [r7, #4]
 80006c0:	460b      	mov	r3, r1
 80006c2:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber);
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	695b      	ldr	r3, [r3, #20]
 80006c8:	78fa      	ldrb	r2, [r7, #3]
 80006ca:	2101      	movs	r1, #1
 80006cc:	fa01 f202 	lsl.w	r2, r1, r2
 80006d0:	405a      	eors	r2, r3
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	615a      	str	r2, [r3, #20]
}
 80006d6:	bf00      	nop
 80006d8:	370c      	adds	r7, #12
 80006da:	46bd      	mov	sp, r7
 80006dc:	bc80      	pop	{r7}
 80006de:	4770      	bx	lr

080006e0 <__libc_init_array>:
 80006e0:	b570      	push	{r4, r5, r6, lr}
 80006e2:	4d0d      	ldr	r5, [pc, #52]	; (8000718 <__libc_init_array+0x38>)
 80006e4:	4c0d      	ldr	r4, [pc, #52]	; (800071c <__libc_init_array+0x3c>)
 80006e6:	1b64      	subs	r4, r4, r5
 80006e8:	10a4      	asrs	r4, r4, #2
 80006ea:	2600      	movs	r6, #0
 80006ec:	42a6      	cmp	r6, r4
 80006ee:	d109      	bne.n	8000704 <__libc_init_array+0x24>
 80006f0:	4d0b      	ldr	r5, [pc, #44]	; (8000720 <__libc_init_array+0x40>)
 80006f2:	4c0c      	ldr	r4, [pc, #48]	; (8000724 <__libc_init_array+0x44>)
 80006f4:	f000 f818 	bl	8000728 <_init>
 80006f8:	1b64      	subs	r4, r4, r5
 80006fa:	10a4      	asrs	r4, r4, #2
 80006fc:	2600      	movs	r6, #0
 80006fe:	42a6      	cmp	r6, r4
 8000700:	d105      	bne.n	800070e <__libc_init_array+0x2e>
 8000702:	bd70      	pop	{r4, r5, r6, pc}
 8000704:	f855 3b04 	ldr.w	r3, [r5], #4
 8000708:	4798      	blx	r3
 800070a:	3601      	adds	r6, #1
 800070c:	e7ee      	b.n	80006ec <__libc_init_array+0xc>
 800070e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000712:	4798      	blx	r3
 8000714:	3601      	adds	r6, #1
 8000716:	e7f2      	b.n	80006fe <__libc_init_array+0x1e>
 8000718:	08000740 	.word	0x08000740
 800071c:	08000740 	.word	0x08000740
 8000720:	08000740 	.word	0x08000740
 8000724:	08000744 	.word	0x08000744

08000728 <_init>:
 8000728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800072a:	bf00      	nop
 800072c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800072e:	bc08      	pop	{r3}
 8000730:	469e      	mov	lr, r3
 8000732:	4770      	bx	lr

08000734 <_fini>:
 8000734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000736:	bf00      	nop
 8000738:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800073a:	bc08      	pop	{r3}
 800073c:	469e      	mov	lr, r3
 800073e:	4770      	bx	lr
