
STM32F767ZI_Driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000978  080001f8  080001f8  000101f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b70  08000b78  00010b78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b70  08000b70  00010b78  2**0
                  CONTENTS
  4 .ARM          00000000  08000b70  08000b70  00010b78  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b70  08000b78  00010b78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b70  08000b70  00010b70  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b74  08000b74  00010b74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010b78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b78  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b78  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010b78  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010ba2  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a83  00000000  00000000  00010be5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002bb  00000000  00000000  00011668  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00011928  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  000119f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002536  00000000  00000000  00011a7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001265  00000000  00000000  00013fb2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000094c0  00000000  00000000  00015217  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000288  00000000  00000000  0001e6d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000a5  00000000  00000000  0001e960  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	; (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	; (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	08000b58 	.word	0x08000b58

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	; (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	; (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	; (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	08000b58 	.word	0x08000b58

08000238 <delay>:

#define HIGH 1
#define BTN_PRESSED HIGH

void delay(void)
{
 8000238:	b480      	push	{r7}
 800023a:	b083      	sub	sp, #12
 800023c:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 250000; i++);
 800023e:	2300      	movs	r3, #0
 8000240:	607b      	str	r3, [r7, #4]
 8000242:	e002      	b.n	800024a <delay+0x12>
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	3301      	adds	r3, #1
 8000248:	607b      	str	r3, [r7, #4]
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	4a04      	ldr	r2, [pc, #16]	; (8000260 <delay+0x28>)
 800024e:	4293      	cmp	r3, r2
 8000250:	d9f8      	bls.n	8000244 <delay+0xc>
}
 8000252:	bf00      	nop
 8000254:	bf00      	nop
 8000256:	370c      	adds	r7, #12
 8000258:	46bd      	mov	sp, r7
 800025a:	bc80      	pop	{r7}
 800025c:	4770      	bx	lr
 800025e:	bf00      	nop
 8000260:	0003d08f 	.word	0x0003d08f

08000264 <main>:

int main(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	b086      	sub	sp, #24
 8000268:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOled, GPIObtn;
	memset(&GPIOled, 0, sizeof(GPIOled));
 800026a:	f107 030c 	add.w	r3, r7, #12
 800026e:	220c      	movs	r2, #12
 8000270:	2100      	movs	r1, #0
 8000272:	4618      	mov	r0, r3
 8000274:	f000 fc44 	bl	8000b00 <memset>
	memset(&GPIObtn, 0, sizeof(GPIObtn));
 8000278:	463b      	mov	r3, r7
 800027a:	220c      	movs	r2, #12
 800027c:	2100      	movs	r1, #0
 800027e:	4618      	mov	r0, r3
 8000280:	f000 fc3e 	bl	8000b00 <memset>

	//GPIO led
	GPIOled.pGPIOx = GPIOB;
 8000284:	4b17      	ldr	r3, [pc, #92]	; (80002e4 <main+0x80>)
 8000286:	60fb      	str	r3, [r7, #12]
	GPIOled.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
 8000288:	2307      	movs	r3, #7
 800028a:	743b      	strb	r3, [r7, #16]
	GPIOled.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800028c:	2301      	movs	r3, #1
 800028e:	747b      	strb	r3, [r7, #17]
	GPIOled.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 8000290:	2302      	movs	r3, #2
 8000292:	74bb      	strb	r3, [r7, #18]
	GPIOled.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000294:	2300      	movs	r3, #0
 8000296:	753b      	strb	r3, [r7, #20]
	GPIOled.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000298:	2300      	movs	r3, #0
 800029a:	74fb      	strb	r3, [r7, #19]

	//GPIO button
	GPIObtn.pGPIOx = GPIOC;
 800029c:	4b12      	ldr	r3, [pc, #72]	; (80002e8 <main+0x84>)
 800029e:	603b      	str	r3, [r7, #0]
	GPIObtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80002a0:	230d      	movs	r3, #13
 80002a2:	713b      	strb	r3, [r7, #4]
	GPIObtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 80002a4:	2304      	movs	r3, #4
 80002a6:	717b      	strb	r3, [r7, #5]
	GPIObtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 80002a8:	2302      	movs	r3, #2
 80002aa:	71bb      	strb	r3, [r7, #6]
	GPIObtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80002ac:	2300      	movs	r3, #0
 80002ae:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOB, ENABLE);
 80002b0:	2101      	movs	r1, #1
 80002b2:	480c      	ldr	r0, [pc, #48]	; (80002e4 <main+0x80>)
 80002b4:	f000 f854 	bl	8000360 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOC, ENABLE);
 80002b8:	2101      	movs	r1, #1
 80002ba:	480b      	ldr	r0, [pc, #44]	; (80002e8 <main+0x84>)
 80002bc:	f000 f850 	bl	8000360 <GPIO_PeriClockControl>
	GPIO_Init(&GPIOled);
 80002c0:	f107 030c 	add.w	r3, r7, #12
 80002c4:	4618      	mov	r0, r3
 80002c6:	f000 f963 	bl	8000590 <GPIO_Init>
	GPIO_Init(&GPIObtn);
 80002ca:	463b      	mov	r3, r7
 80002cc:	4618      	mov	r0, r3
 80002ce:	f000 f95f 	bl	8000590 <GPIO_Init>

	//IRQ configurations
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, NVIC_IRQ_PRIO15);
 80002d2:	210f      	movs	r1, #15
 80002d4:	2028      	movs	r0, #40	; 0x28
 80002d6:	f000 fbcb 	bl	8000a70 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, ENABLE);
 80002da:	2101      	movs	r1, #1
 80002dc:	2028      	movs	r0, #40	; 0x28
 80002de:	f000 fb17 	bl	8000910 <GPIO_IRQInterruptConfig>

	while (1);
 80002e2:	e7fe      	b.n	80002e2 <main+0x7e>
 80002e4:	40020400 	.word	0x40020400
 80002e8:	40020800 	.word	0x40020800

080002ec <EXTI15_10_IRQHandler>:
}

void EXTI15_10_IRQHandler(void)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	af00      	add	r7, sp, #0
	delay();
 80002f0:	f7ff ffa2 	bl	8000238 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_13);  //Clear the pending event from the EXTI line
 80002f4:	200d      	movs	r0, #13
 80002f6:	f000 fbe3 	bl	8000ac0 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_NO_7);
 80002fa:	2107      	movs	r1, #7
 80002fc:	4802      	ldr	r0, [pc, #8]	; (8000308 <EXTI15_10_IRQHandler+0x1c>)
 80002fe:	f000 faf3 	bl	80008e8 <GPIO_ToggleOutputPin>
}
 8000302:	bf00      	nop
 8000304:	bd80      	pop	{r7, pc}
 8000306:	bf00      	nop
 8000308:	40020400 	.word	0x40020400

0800030c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800030c:	480d      	ldr	r0, [pc, #52]	; (8000344 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800030e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000310:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000314:	480c      	ldr	r0, [pc, #48]	; (8000348 <LoopForever+0x6>)
  ldr r1, =_edata
 8000316:	490d      	ldr	r1, [pc, #52]	; (800034c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000318:	4a0d      	ldr	r2, [pc, #52]	; (8000350 <LoopForever+0xe>)
  movs r3, #0
 800031a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800031c:	e002      	b.n	8000324 <LoopCopyDataInit>

0800031e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800031e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000320:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000322:	3304      	adds	r3, #4

08000324 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000324:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000326:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000328:	d3f9      	bcc.n	800031e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800032a:	4a0a      	ldr	r2, [pc, #40]	; (8000354 <LoopForever+0x12>)
  ldr r4, =_ebss
 800032c:	4c0a      	ldr	r4, [pc, #40]	; (8000358 <LoopForever+0x16>)
  movs r3, #0
 800032e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000330:	e001      	b.n	8000336 <LoopFillZerobss>

08000332 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000332:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000334:	3204      	adds	r2, #4

08000336 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000336:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000338:	d3fb      	bcc.n	8000332 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800033a:	f000 fbe9 	bl	8000b10 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800033e:	f7ff ff91 	bl	8000264 <main>

08000342 <LoopForever>:

LoopForever:
  b LoopForever
 8000342:	e7fe      	b.n	8000342 <LoopForever>
  ldr   r0, =_estack
 8000344:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 8000348:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800034c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000350:	08000b78 	.word	0x08000b78
  ldr r2, =_sbss
 8000354:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000358:	2000001c 	.word	0x2000001c

0800035c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800035c:	e7fe      	b.n	800035c <ADC_IRQHandler>
	...

08000360 <GPIO_PeriClockControl>:
 * @return				- none
 *
 * @Note 				- none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000360:	b480      	push	{r7}
 8000362:	b083      	sub	sp, #12
 8000364:	af00      	add	r7, sp, #0
 8000366:	6078      	str	r0, [r7, #4]
 8000368:	460b      	mov	r3, r1
 800036a:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 800036c:	78fb      	ldrb	r3, [r7, #3]
 800036e:	2b01      	cmp	r3, #1
 8000370:	d178      	bne.n	8000464 <GPIO_PeriClockControl+0x104>
	{
		if (pGPIOx == GPIOA)
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	4a7a      	ldr	r2, [pc, #488]	; (8000560 <GPIO_PeriClockControl+0x200>)
 8000376:	4293      	cmp	r3, r2
 8000378:	d106      	bne.n	8000388 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800037a:	4b7a      	ldr	r3, [pc, #488]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800037c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037e:	4a79      	ldr	r2, [pc, #484]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000380:	f043 0301 	orr.w	r3, r3, #1
 8000384:	6313      	str	r3, [r2, #48]	; 0x30
		else if (pGPIOx == GPIOK)
		{
			GPIOK_PCLK_DI();
		}
	}
}
 8000386:	e0e5      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOB)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	4a77      	ldr	r2, [pc, #476]	; (8000568 <GPIO_PeriClockControl+0x208>)
 800038c:	4293      	cmp	r3, r2
 800038e:	d106      	bne.n	800039e <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000390:	4b74      	ldr	r3, [pc, #464]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000392:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000394:	4a73      	ldr	r2, [pc, #460]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000396:	f043 0302 	orr.w	r3, r3, #2
 800039a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039c:	e0da      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOC)
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	4a72      	ldr	r2, [pc, #456]	; (800056c <GPIO_PeriClockControl+0x20c>)
 80003a2:	4293      	cmp	r3, r2
 80003a4:	d106      	bne.n	80003b4 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80003a6:	4b6f      	ldr	r3, [pc, #444]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80003a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003aa:	4a6e      	ldr	r2, [pc, #440]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80003ac:	f043 0304 	orr.w	r3, r3, #4
 80003b0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b2:	e0cf      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOD)
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	4a6e      	ldr	r2, [pc, #440]	; (8000570 <GPIO_PeriClockControl+0x210>)
 80003b8:	4293      	cmp	r3, r2
 80003ba:	d106      	bne.n	80003ca <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80003bc:	4b69      	ldr	r3, [pc, #420]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80003be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c0:	4a68      	ldr	r2, [pc, #416]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80003c2:	f043 0308 	orr.w	r3, r3, #8
 80003c6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c8:	e0c4      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOE)
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	4a69      	ldr	r2, [pc, #420]	; (8000574 <GPIO_PeriClockControl+0x214>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d106      	bne.n	80003e0 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80003d2:	4b64      	ldr	r3, [pc, #400]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80003d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d6:	4a63      	ldr	r2, [pc, #396]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80003d8:	f043 0310 	orr.w	r3, r3, #16
 80003dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003de:	e0b9      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOF)
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	4a65      	ldr	r2, [pc, #404]	; (8000578 <GPIO_PeriClockControl+0x218>)
 80003e4:	4293      	cmp	r3, r2
 80003e6:	d106      	bne.n	80003f6 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003e8:	4b5e      	ldr	r3, [pc, #376]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80003ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ec:	4a5d      	ldr	r2, [pc, #372]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80003ee:	f043 0320 	orr.w	r3, r3, #32
 80003f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f4:	e0ae      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOG)
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4a60      	ldr	r2, [pc, #384]	; (800057c <GPIO_PeriClockControl+0x21c>)
 80003fa:	4293      	cmp	r3, r2
 80003fc:	d106      	bne.n	800040c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003fe:	4b59      	ldr	r3, [pc, #356]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000402:	4a58      	ldr	r2, [pc, #352]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000404:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000408:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040a:	e0a3      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOH)
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	4a5c      	ldr	r2, [pc, #368]	; (8000580 <GPIO_PeriClockControl+0x220>)
 8000410:	4293      	cmp	r3, r2
 8000412:	d106      	bne.n	8000422 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000414:	4b53      	ldr	r3, [pc, #332]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000416:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000418:	4a52      	ldr	r2, [pc, #328]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800041a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800041e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000420:	e098      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOI)
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4a57      	ldr	r2, [pc, #348]	; (8000584 <GPIO_PeriClockControl+0x224>)
 8000426:	4293      	cmp	r3, r2
 8000428:	d106      	bne.n	8000438 <GPIO_PeriClockControl+0xd8>
			GPIOI_PCLK_EN();
 800042a:	4b4e      	ldr	r3, [pc, #312]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800042c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042e:	4a4d      	ldr	r2, [pc, #308]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000430:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000434:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000436:	e08d      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOJ)
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	4a53      	ldr	r2, [pc, #332]	; (8000588 <GPIO_PeriClockControl+0x228>)
 800043c:	4293      	cmp	r3, r2
 800043e:	d106      	bne.n	800044e <GPIO_PeriClockControl+0xee>
			GPIOJ_PCLK_EN();
 8000440:	4b48      	ldr	r3, [pc, #288]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000442:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000444:	4a47      	ldr	r2, [pc, #284]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000446:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800044a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044c:	e082      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOK)
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	4a4e      	ldr	r2, [pc, #312]	; (800058c <GPIO_PeriClockControl+0x22c>)
 8000452:	4293      	cmp	r3, r2
 8000454:	d17e      	bne.n	8000554 <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_EN();
 8000456:	4b43      	ldr	r3, [pc, #268]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000458:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045a:	4a42      	ldr	r2, [pc, #264]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800045c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000460:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000462:	e077      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		if (pGPIOx == GPIOA)
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	4a3e      	ldr	r2, [pc, #248]	; (8000560 <GPIO_PeriClockControl+0x200>)
 8000468:	4293      	cmp	r3, r2
 800046a:	d106      	bne.n	800047a <GPIO_PeriClockControl+0x11a>
			GPIOA_PCLK_DI();
 800046c:	4b3d      	ldr	r3, [pc, #244]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800046e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000470:	4a3c      	ldr	r2, [pc, #240]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000472:	f023 0301 	bic.w	r3, r3, #1
 8000476:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000478:	e06c      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOB)
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	4a3a      	ldr	r2, [pc, #232]	; (8000568 <GPIO_PeriClockControl+0x208>)
 800047e:	4293      	cmp	r3, r2
 8000480:	d106      	bne.n	8000490 <GPIO_PeriClockControl+0x130>
			GPIOB_PCLK_DI();
 8000482:	4b38      	ldr	r3, [pc, #224]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000484:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000486:	4a37      	ldr	r2, [pc, #220]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000488:	f023 0302 	bic.w	r3, r3, #2
 800048c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800048e:	e061      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOC)
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	4a36      	ldr	r2, [pc, #216]	; (800056c <GPIO_PeriClockControl+0x20c>)
 8000494:	4293      	cmp	r3, r2
 8000496:	d106      	bne.n	80004a6 <GPIO_PeriClockControl+0x146>
			GPIOC_PCLK_DI();
 8000498:	4b32      	ldr	r3, [pc, #200]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800049a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800049c:	4a31      	ldr	r2, [pc, #196]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800049e:	f023 0304 	bic.w	r3, r3, #4
 80004a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a4:	e056      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOD)
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	4a31      	ldr	r2, [pc, #196]	; (8000570 <GPIO_PeriClockControl+0x210>)
 80004aa:	4293      	cmp	r3, r2
 80004ac:	d106      	bne.n	80004bc <GPIO_PeriClockControl+0x15c>
			GPIOD_PCLK_DI();
 80004ae:	4b2d      	ldr	r3, [pc, #180]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80004b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b2:	4a2c      	ldr	r2, [pc, #176]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80004b4:	f023 0308 	bic.w	r3, r3, #8
 80004b8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ba:	e04b      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOE)
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	4a2d      	ldr	r2, [pc, #180]	; (8000574 <GPIO_PeriClockControl+0x214>)
 80004c0:	4293      	cmp	r3, r2
 80004c2:	d106      	bne.n	80004d2 <GPIO_PeriClockControl+0x172>
			GPIOE_PCLK_DI();
 80004c4:	4b27      	ldr	r3, [pc, #156]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80004c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004c8:	4a26      	ldr	r2, [pc, #152]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80004ca:	f023 0310 	bic.w	r3, r3, #16
 80004ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004d0:	e040      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOF)
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	4a28      	ldr	r2, [pc, #160]	; (8000578 <GPIO_PeriClockControl+0x218>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d106      	bne.n	80004e8 <GPIO_PeriClockControl+0x188>
			GPIOF_PCLK_DI();
 80004da:	4b22      	ldr	r3, [pc, #136]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80004dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004de:	4a21      	ldr	r2, [pc, #132]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80004e0:	f023 0320 	bic.w	r3, r3, #32
 80004e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004e6:	e035      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOG)
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	4a24      	ldr	r2, [pc, #144]	; (800057c <GPIO_PeriClockControl+0x21c>)
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d106      	bne.n	80004fe <GPIO_PeriClockControl+0x19e>
			GPIOG_PCLK_DI();
 80004f0:	4b1c      	ldr	r3, [pc, #112]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80004f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004f4:	4a1b      	ldr	r2, [pc, #108]	; (8000564 <GPIO_PeriClockControl+0x204>)
 80004f6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80004fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004fc:	e02a      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOH)
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	4a1f      	ldr	r2, [pc, #124]	; (8000580 <GPIO_PeriClockControl+0x220>)
 8000502:	4293      	cmp	r3, r2
 8000504:	d106      	bne.n	8000514 <GPIO_PeriClockControl+0x1b4>
			GPIOH_PCLK_DI();
 8000506:	4b17      	ldr	r3, [pc, #92]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000508:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800050a:	4a16      	ldr	r2, [pc, #88]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800050c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000510:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000512:	e01f      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOI)
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	4a1b      	ldr	r2, [pc, #108]	; (8000584 <GPIO_PeriClockControl+0x224>)
 8000518:	4293      	cmp	r3, r2
 800051a:	d106      	bne.n	800052a <GPIO_PeriClockControl+0x1ca>
			GPIOI_PCLK_DI();
 800051c:	4b11      	ldr	r3, [pc, #68]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800051e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000520:	4a10      	ldr	r2, [pc, #64]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000522:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000526:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000528:	e014      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOJ)
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	4a16      	ldr	r2, [pc, #88]	; (8000588 <GPIO_PeriClockControl+0x228>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d106      	bne.n	8000540 <GPIO_PeriClockControl+0x1e0>
			GPIOJ_PCLK_DI();
 8000532:	4b0c      	ldr	r3, [pc, #48]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000534:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000536:	4a0b      	ldr	r2, [pc, #44]	; (8000564 <GPIO_PeriClockControl+0x204>)
 8000538:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800053c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800053e:	e009      	b.n	8000554 <GPIO_PeriClockControl+0x1f4>
		else if (pGPIOx == GPIOK)
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	4a12      	ldr	r2, [pc, #72]	; (800058c <GPIO_PeriClockControl+0x22c>)
 8000544:	4293      	cmp	r3, r2
 8000546:	d105      	bne.n	8000554 <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_DI();
 8000548:	4b06      	ldr	r3, [pc, #24]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800054a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800054c:	4a05      	ldr	r2, [pc, #20]	; (8000564 <GPIO_PeriClockControl+0x204>)
 800054e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000552:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000554:	bf00      	nop
 8000556:	370c      	adds	r7, #12
 8000558:	46bd      	mov	sp, r7
 800055a:	bc80      	pop	{r7}
 800055c:	4770      	bx	lr
 800055e:	bf00      	nop
 8000560:	40020000 	.word	0x40020000
 8000564:	40023800 	.word	0x40023800
 8000568:	40020400 	.word	0x40020400
 800056c:	40020800 	.word	0x40020800
 8000570:	40020c00 	.word	0x40020c00
 8000574:	40021000 	.word	0x40021000
 8000578:	40021400 	.word	0x40021400
 800057c:	40021800 	.word	0x40021800
 8000580:	40021c00 	.word	0x40021c00
 8000584:	40022000 	.word	0x40022000
 8000588:	40022400 	.word	0x40022400
 800058c:	40022800 	.word	0x40022800

08000590 <GPIO_Init>:
 * @return				- none
 *
 * @Note 				- none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000590:	b480      	push	{r7}
 8000592:	b087      	sub	sp, #28
 8000594:	af00      	add	r7, sp, #0
 8000596:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000598:	2300      	movs	r3, #0
 800059a:	617b      	str	r3, [r7, #20]
	//1. Configure the mode of the GPIO pin
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	795b      	ldrb	r3, [r3, #5]
 80005a0:	2b03      	cmp	r3, #3
 80005a2:	d81f      	bhi.n	80005e4 <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	795b      	ldrb	r3, [r3, #5]
 80005a8:	461a      	mov	r2, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	791b      	ldrb	r3, [r3, #4]
 80005ae:	005b      	lsls	r3, r3, #1
 80005b0:	fa02 f303 	lsl.w	r3, r2, r3
 80005b4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	689a      	ldr	r2, [r3, #8]
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	791b      	ldrb	r3, [r3, #4]
 80005c0:	4619      	mov	r1, r3
 80005c2:	2303      	movs	r3, #3
 80005c4:	408b      	lsls	r3, r1
 80005c6:	43db      	mvns	r3, r3
 80005c8:	4619      	mov	r1, r3
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	400a      	ands	r2, r1
 80005d0:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->MODER |= temp; //Setting
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	6819      	ldr	r1, [r3, #0]
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	697a      	ldr	r2, [r7, #20]
 80005de:	430a      	orrs	r2, r1
 80005e0:	601a      	str	r2, [r3, #0]
 80005e2:	e0dc      	b.n	800079e <GPIO_Init+0x20e>
	}
	else /* Interrupt mode */
	{

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	795b      	ldrb	r3, [r3, #5]
 80005e8:	2b04      	cmp	r3, #4
 80005ea:	d117      	bne.n	800061c <GPIO_Init+0x8c>
		{
			//1.Configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ec:	4b51      	ldr	r3, [pc, #324]	; (8000734 <GPIO_Init+0x1a4>)
 80005ee:	68db      	ldr	r3, [r3, #12]
 80005f0:	687a      	ldr	r2, [r7, #4]
 80005f2:	7912      	ldrb	r2, [r2, #4]
 80005f4:	4611      	mov	r1, r2
 80005f6:	2201      	movs	r2, #1
 80005f8:	408a      	lsls	r2, r1
 80005fa:	4611      	mov	r1, r2
 80005fc:	4a4d      	ldr	r2, [pc, #308]	; (8000734 <GPIO_Init+0x1a4>)
 80005fe:	430b      	orrs	r3, r1
 8000600:	60d3      	str	r3, [r2, #12]
			//Clear corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000602:	4b4c      	ldr	r3, [pc, #304]	; (8000734 <GPIO_Init+0x1a4>)
 8000604:	689b      	ldr	r3, [r3, #8]
 8000606:	687a      	ldr	r2, [r7, #4]
 8000608:	7912      	ldrb	r2, [r2, #4]
 800060a:	4611      	mov	r1, r2
 800060c:	2201      	movs	r2, #1
 800060e:	408a      	lsls	r2, r1
 8000610:	43d2      	mvns	r2, r2
 8000612:	4611      	mov	r1, r2
 8000614:	4a47      	ldr	r2, [pc, #284]	; (8000734 <GPIO_Init+0x1a4>)
 8000616:	400b      	ands	r3, r1
 8000618:	6093      	str	r3, [r2, #8]
 800061a:	e035      	b.n	8000688 <GPIO_Init+0xf8>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	795b      	ldrb	r3, [r3, #5]
 8000620:	2b05      	cmp	r3, #5
 8000622:	d117      	bne.n	8000654 <GPIO_Init+0xc4>
		{
			//1.Configure the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000624:	4b43      	ldr	r3, [pc, #268]	; (8000734 <GPIO_Init+0x1a4>)
 8000626:	689b      	ldr	r3, [r3, #8]
 8000628:	687a      	ldr	r2, [r7, #4]
 800062a:	7912      	ldrb	r2, [r2, #4]
 800062c:	4611      	mov	r1, r2
 800062e:	2201      	movs	r2, #1
 8000630:	408a      	lsls	r2, r1
 8000632:	4611      	mov	r1, r2
 8000634:	4a3f      	ldr	r2, [pc, #252]	; (8000734 <GPIO_Init+0x1a4>)
 8000636:	430b      	orrs	r3, r1
 8000638:	6093      	str	r3, [r2, #8]
			//Clear corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800063a:	4b3e      	ldr	r3, [pc, #248]	; (8000734 <GPIO_Init+0x1a4>)
 800063c:	68db      	ldr	r3, [r3, #12]
 800063e:	687a      	ldr	r2, [r7, #4]
 8000640:	7912      	ldrb	r2, [r2, #4]
 8000642:	4611      	mov	r1, r2
 8000644:	2201      	movs	r2, #1
 8000646:	408a      	lsls	r2, r1
 8000648:	43d2      	mvns	r2, r2
 800064a:	4611      	mov	r1, r2
 800064c:	4a39      	ldr	r2, [pc, #228]	; (8000734 <GPIO_Init+0x1a4>)
 800064e:	400b      	ands	r3, r1
 8000650:	60d3      	str	r3, [r2, #12]
 8000652:	e019      	b.n	8000688 <GPIO_Init+0xf8>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	795b      	ldrb	r3, [r3, #5]
 8000658:	2b06      	cmp	r3, #6
 800065a:	d115      	bne.n	8000688 <GPIO_Init+0xf8>
		{
			//1.Configure both FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800065c:	4b35      	ldr	r3, [pc, #212]	; (8000734 <GPIO_Init+0x1a4>)
 800065e:	68db      	ldr	r3, [r3, #12]
 8000660:	687a      	ldr	r2, [r7, #4]
 8000662:	7912      	ldrb	r2, [r2, #4]
 8000664:	4611      	mov	r1, r2
 8000666:	2201      	movs	r2, #1
 8000668:	408a      	lsls	r2, r1
 800066a:	4611      	mov	r1, r2
 800066c:	4a31      	ldr	r2, [pc, #196]	; (8000734 <GPIO_Init+0x1a4>)
 800066e:	430b      	orrs	r3, r1
 8000670:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000672:	4b30      	ldr	r3, [pc, #192]	; (8000734 <GPIO_Init+0x1a4>)
 8000674:	689b      	ldr	r3, [r3, #8]
 8000676:	687a      	ldr	r2, [r7, #4]
 8000678:	7912      	ldrb	r2, [r2, #4]
 800067a:	4611      	mov	r1, r2
 800067c:	2201      	movs	r2, #1
 800067e:	408a      	lsls	r2, r1
 8000680:	4611      	mov	r1, r2
 8000682:	4a2c      	ldr	r2, [pc, #176]	; (8000734 <GPIO_Init+0x1a4>)
 8000684:	430b      	orrs	r3, r1
 8000686:	6093      	str	r3, [r2, #8]
		}

		//2.Configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	791b      	ldrb	r3, [r3, #4]
 800068c:	089b      	lsrs	r3, r3, #2
 800068e:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	791b      	ldrb	r3, [r3, #4]
 8000694:	f003 0303 	and.w	r3, r3, #3
 8000698:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	4a26      	ldr	r2, [pc, #152]	; (8000738 <GPIO_Init+0x1a8>)
 80006a0:	4293      	cmp	r3, r2
 80006a2:	d05f      	beq.n	8000764 <GPIO_Init+0x1d4>
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	4a24      	ldr	r2, [pc, #144]	; (800073c <GPIO_Init+0x1ac>)
 80006aa:	4293      	cmp	r3, r2
 80006ac:	d040      	beq.n	8000730 <GPIO_Init+0x1a0>
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	4a23      	ldr	r2, [pc, #140]	; (8000740 <GPIO_Init+0x1b0>)
 80006b4:	4293      	cmp	r3, r2
 80006b6:	d039      	beq.n	800072c <GPIO_Init+0x19c>
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	4a21      	ldr	r2, [pc, #132]	; (8000744 <GPIO_Init+0x1b4>)
 80006be:	4293      	cmp	r3, r2
 80006c0:	d032      	beq.n	8000728 <GPIO_Init+0x198>
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	4a20      	ldr	r2, [pc, #128]	; (8000748 <GPIO_Init+0x1b8>)
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d02b      	beq.n	8000724 <GPIO_Init+0x194>
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	4a1e      	ldr	r2, [pc, #120]	; (800074c <GPIO_Init+0x1bc>)
 80006d2:	4293      	cmp	r3, r2
 80006d4:	d024      	beq.n	8000720 <GPIO_Init+0x190>
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	4a1d      	ldr	r2, [pc, #116]	; (8000750 <GPIO_Init+0x1c0>)
 80006dc:	4293      	cmp	r3, r2
 80006de:	d01d      	beq.n	800071c <GPIO_Init+0x18c>
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	4a1b      	ldr	r2, [pc, #108]	; (8000754 <GPIO_Init+0x1c4>)
 80006e6:	4293      	cmp	r3, r2
 80006e8:	d016      	beq.n	8000718 <GPIO_Init+0x188>
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	4a1a      	ldr	r2, [pc, #104]	; (8000758 <GPIO_Init+0x1c8>)
 80006f0:	4293      	cmp	r3, r2
 80006f2:	d00f      	beq.n	8000714 <GPIO_Init+0x184>
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	4a18      	ldr	r2, [pc, #96]	; (800075c <GPIO_Init+0x1cc>)
 80006fa:	4293      	cmp	r3, r2
 80006fc:	d008      	beq.n	8000710 <GPIO_Init+0x180>
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	4a17      	ldr	r2, [pc, #92]	; (8000760 <GPIO_Init+0x1d0>)
 8000704:	4293      	cmp	r3, r2
 8000706:	d101      	bne.n	800070c <GPIO_Init+0x17c>
 8000708:	230a      	movs	r3, #10
 800070a:	e02c      	b.n	8000766 <GPIO_Init+0x1d6>
 800070c:	2300      	movs	r3, #0
 800070e:	e02a      	b.n	8000766 <GPIO_Init+0x1d6>
 8000710:	2309      	movs	r3, #9
 8000712:	e028      	b.n	8000766 <GPIO_Init+0x1d6>
 8000714:	2308      	movs	r3, #8
 8000716:	e026      	b.n	8000766 <GPIO_Init+0x1d6>
 8000718:	2307      	movs	r3, #7
 800071a:	e024      	b.n	8000766 <GPIO_Init+0x1d6>
 800071c:	2306      	movs	r3, #6
 800071e:	e022      	b.n	8000766 <GPIO_Init+0x1d6>
 8000720:	2305      	movs	r3, #5
 8000722:	e020      	b.n	8000766 <GPIO_Init+0x1d6>
 8000724:	2304      	movs	r3, #4
 8000726:	e01e      	b.n	8000766 <GPIO_Init+0x1d6>
 8000728:	2303      	movs	r3, #3
 800072a:	e01c      	b.n	8000766 <GPIO_Init+0x1d6>
 800072c:	2302      	movs	r3, #2
 800072e:	e01a      	b.n	8000766 <GPIO_Init+0x1d6>
 8000730:	2301      	movs	r3, #1
 8000732:	e018      	b.n	8000766 <GPIO_Init+0x1d6>
 8000734:	40013c00 	.word	0x40013c00
 8000738:	40020000 	.word	0x40020000
 800073c:	40020400 	.word	0x40020400
 8000740:	40020800 	.word	0x40020800
 8000744:	40020c00 	.word	0x40020c00
 8000748:	40021000 	.word	0x40021000
 800074c:	40021400 	.word	0x40021400
 8000750:	40021800 	.word	0x40021800
 8000754:	40021c00 	.word	0x40021c00
 8000758:	40022000 	.word	0x40022000
 800075c:	40022400 	.word	0x40022400
 8000760:	40022800 	.word	0x40022800
 8000764:	2300      	movs	r3, #0
 8000766:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000768:	4b5c      	ldr	r3, [pc, #368]	; (80008dc <GPIO_Init+0x34c>)
 800076a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800076c:	4a5b      	ldr	r2, [pc, #364]	; (80008dc <GPIO_Init+0x34c>)
 800076e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000772:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode <<(temp2 * 4);
 8000774:	7c7a      	ldrb	r2, [r7, #17]
 8000776:	7cbb      	ldrb	r3, [r7, #18]
 8000778:	009b      	lsls	r3, r3, #2
 800077a:	fa02 f103 	lsl.w	r1, r2, r3
 800077e:	4a58      	ldr	r2, [pc, #352]	; (80008e0 <GPIO_Init+0x350>)
 8000780:	7cfb      	ldrb	r3, [r7, #19]
 8000782:	3302      	adds	r3, #2
 8000784:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3.Enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000788:	4b56      	ldr	r3, [pc, #344]	; (80008e4 <GPIO_Init+0x354>)
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	687a      	ldr	r2, [r7, #4]
 800078e:	7912      	ldrb	r2, [r2, #4]
 8000790:	4611      	mov	r1, r2
 8000792:	2201      	movs	r2, #1
 8000794:	408a      	lsls	r2, r1
 8000796:	4611      	mov	r1, r2
 8000798:	4a52      	ldr	r2, [pc, #328]	; (80008e4 <GPIO_Init+0x354>)
 800079a:	430b      	orrs	r3, r1
 800079c:	6013      	str	r3, [r2, #0]

	}
	temp = 0;
 800079e:	2300      	movs	r3, #0
 80007a0:	617b      	str	r3, [r7, #20]

	//2. Configure the speed of the GPIO pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	799b      	ldrb	r3, [r3, #6]
 80007a6:	461a      	mov	r2, r3
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	791b      	ldrb	r3, [r3, #4]
 80007ac:	005b      	lsls	r3, r3, #1
 80007ae:	fa02 f303 	lsl.w	r3, r2, r3
 80007b2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	791b      	ldrb	r3, [r3, #4]
 80007be:	4619      	mov	r1, r3
 80007c0:	2303      	movs	r3, #3
 80007c2:	408b      	lsls	r3, r1
 80007c4:	43db      	mvns	r3, r3
 80007c6:	4619      	mov	r1, r3
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	681b      	ldr	r3, [r3, #0]
 80007cc:	400a      	ands	r2, r1
 80007ce:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	6899      	ldr	r1, [r3, #8]
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	697a      	ldr	r2, [r7, #20]
 80007dc:	430a      	orrs	r2, r1
 80007de:	609a      	str	r2, [r3, #8]
	temp = 0;
 80007e0:	2300      	movs	r3, #0
 80007e2:	617b      	str	r3, [r7, #20]

	//3. Configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	79db      	ldrb	r3, [r3, #7]
 80007e8:	461a      	mov	r2, r3
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	791b      	ldrb	r3, [r3, #4]
 80007ee:	005b      	lsls	r3, r3, #1
 80007f0:	fa02 f303 	lsl.w	r3, r2, r3
 80007f4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 80007f6:	687b      	ldr	r3, [r7, #4]
 80007f8:	681b      	ldr	r3, [r3, #0]
 80007fa:	68da      	ldr	r2, [r3, #12]
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	791b      	ldrb	r3, [r3, #4]
 8000800:	4619      	mov	r1, r3
 8000802:	2303      	movs	r3, #3
 8000804:	408b      	lsls	r3, r1
 8000806:	43db      	mvns	r3, r3
 8000808:	4619      	mov	r1, r3
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	681b      	ldr	r3, [r3, #0]
 800080e:	400a      	ands	r2, r1
 8000810:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	68d9      	ldr	r1, [r3, #12]
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	681b      	ldr	r3, [r3, #0]
 800081c:	697a      	ldr	r2, [r7, #20]
 800081e:	430a      	orrs	r2, r1
 8000820:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000822:	2300      	movs	r3, #0
 8000824:	617b      	str	r3, [r7, #20]

	//4. Configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	7a1b      	ldrb	r3, [r3, #8]
 800082a:	461a      	mov	r2, r3
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	791b      	ldrb	r3, [r3, #4]
 8000830:	fa02 f303 	lsl.w	r3, r2, r3
 8000834:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 8000836:	687b      	ldr	r3, [r7, #4]
 8000838:	681b      	ldr	r3, [r3, #0]
 800083a:	685a      	ldr	r2, [r3, #4]
 800083c:	687b      	ldr	r3, [r7, #4]
 800083e:	791b      	ldrb	r3, [r3, #4]
 8000840:	4619      	mov	r1, r3
 8000842:	2301      	movs	r3, #1
 8000844:	408b      	lsls	r3, r1
 8000846:	43db      	mvns	r3, r3
 8000848:	4619      	mov	r1, r3
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	681b      	ldr	r3, [r3, #0]
 800084e:	400a      	ands	r2, r1
 8000850:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	681b      	ldr	r3, [r3, #0]
 8000856:	6859      	ldr	r1, [r3, #4]
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	697a      	ldr	r2, [r7, #20]
 800085e:	430a      	orrs	r2, r1
 8000860:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000862:	2300      	movs	r3, #0
 8000864:	617b      	str	r3, [r7, #20]

	//5. Configure the alt function
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000866:	687b      	ldr	r3, [r7, #4]
 8000868:	795b      	ldrb	r3, [r3, #5]
 800086a:	2b02      	cmp	r3, #2
 800086c:	d131      	bne.n	80008d2 <GPIO_Init+0x342>
	{
		//Configure the alt function registers
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800086e:	687b      	ldr	r3, [r7, #4]
 8000870:	791b      	ldrb	r3, [r3, #4]
 8000872:	08db      	lsrs	r3, r3, #3
 8000874:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000876:	687b      	ldr	r3, [r7, #4]
 8000878:	791b      	ldrb	r3, [r3, #4]
 800087a:	f003 0307 	and.w	r3, r3, #7
 800087e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000880:	687b      	ldr	r3, [r7, #4]
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	7c3a      	ldrb	r2, [r7, #16]
 8000886:	3208      	adds	r2, #8
 8000888:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800088c:	7bfb      	ldrb	r3, [r7, #15]
 800088e:	009b      	lsls	r3, r3, #2
 8000890:	220f      	movs	r2, #15
 8000892:	fa02 f303 	lsl.w	r3, r2, r3
 8000896:	43db      	mvns	r3, r3
 8000898:	4618      	mov	r0, r3
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	7c3a      	ldrb	r2, [r7, #16]
 80008a0:	4001      	ands	r1, r0
 80008a2:	3208      	adds	r2, #8
 80008a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	681b      	ldr	r3, [r3, #0]
 80008ac:	7c3a      	ldrb	r2, [r7, #16]
 80008ae:	3208      	adds	r2, #8
 80008b0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80008b4:	687b      	ldr	r3, [r7, #4]
 80008b6:	7a5b      	ldrb	r3, [r3, #9]
 80008b8:	461a      	mov	r2, r3
 80008ba:	7bfb      	ldrb	r3, [r7, #15]
 80008bc:	009b      	lsls	r3, r3, #2
 80008be:	fa02 f303 	lsl.w	r3, r2, r3
 80008c2:	4618      	mov	r0, r3
 80008c4:	687b      	ldr	r3, [r7, #4]
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	7c3a      	ldrb	r2, [r7, #16]
 80008ca:	4301      	orrs	r1, r0
 80008cc:	3208      	adds	r2, #8
 80008ce:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80008d2:	bf00      	nop
 80008d4:	371c      	adds	r7, #28
 80008d6:	46bd      	mov	sp, r7
 80008d8:	bc80      	pop	{r7}
 80008da:	4770      	bx	lr
 80008dc:	40023800 	.word	0x40023800
 80008e0:	40013800 	.word	0x40013800
 80008e4:	40013c00 	.word	0x40013c00

080008e8 <GPIO_ToggleOutputPin>:
 * @return				- none
 *
 * @Note 				- none
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80008e8:	b480      	push	{r7}
 80008ea:	b083      	sub	sp, #12
 80008ec:	af00      	add	r7, sp, #0
 80008ee:	6078      	str	r0, [r7, #4]
 80008f0:	460b      	mov	r3, r1
 80008f2:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber);
 80008f4:	687b      	ldr	r3, [r7, #4]
 80008f6:	695b      	ldr	r3, [r3, #20]
 80008f8:	78fa      	ldrb	r2, [r7, #3]
 80008fa:	2101      	movs	r1, #1
 80008fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000900:	405a      	eors	r2, r3
 8000902:	687b      	ldr	r3, [r7, #4]
 8000904:	615a      	str	r2, [r3, #20]
}
 8000906:	bf00      	nop
 8000908:	370c      	adds	r7, #12
 800090a:	46bd      	mov	sp, r7
 800090c:	bc80      	pop	{r7}
 800090e:	4770      	bx	lr

08000910 <GPIO_IRQInterruptConfig>:
 * @return				- none
 *
 * @Note 				- none
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000910:	b480      	push	{r7}
 8000912:	b083      	sub	sp, #12
 8000914:	af00      	add	r7, sp, #0
 8000916:	4603      	mov	r3, r0
 8000918:	460a      	mov	r2, r1
 800091a:	71fb      	strb	r3, [r7, #7]
 800091c:	4613      	mov	r3, r2
 800091e:	71bb      	strb	r3, [r7, #6]
	if (EnorDi == ENABLE)
 8000920:	79bb      	ldrb	r3, [r7, #6]
 8000922:	2b01      	cmp	r3, #1
 8000924:	d147      	bne.n	80009b6 <GPIO_IRQInterruptConfig+0xa6>
	{
		if (IRQNumber <= 31)
 8000926:	79fb      	ldrb	r3, [r7, #7]
 8000928:	2b1f      	cmp	r3, #31
 800092a:	d80a      	bhi.n	8000942 <GPIO_IRQInterruptConfig+0x32>
		{
			//Program register ISER0 register
			*NVIC_ISER0 |= (1 << IRQNumber);
 800092c:	4b48      	ldr	r3, [pc, #288]	; (8000a50 <GPIO_IRQInterruptConfig+0x140>)
 800092e:	681b      	ldr	r3, [r3, #0]
 8000930:	79fa      	ldrb	r2, [r7, #7]
 8000932:	2101      	movs	r1, #1
 8000934:	fa01 f202 	lsl.w	r2, r1, r2
 8000938:	4611      	mov	r1, r2
 800093a:	4a45      	ldr	r2, [pc, #276]	; (8000a50 <GPIO_IRQInterruptConfig+0x140>)
 800093c:	430b      	orrs	r3, r1
 800093e:	6013      	str	r3, [r2, #0]
		{
			//Program register ICER3 register
			*NVIC_ICER3 |= (1 << (IRQNumber % 128));
		}
	}
}
 8000940:	e081      	b.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
		else if(IRQNumber > 31 && IRQNumber < 64) //32 to 63
 8000942:	79fb      	ldrb	r3, [r7, #7]
 8000944:	2b1f      	cmp	r3, #31
 8000946:	d90f      	bls.n	8000968 <GPIO_IRQInterruptConfig+0x58>
 8000948:	79fb      	ldrb	r3, [r7, #7]
 800094a:	2b3f      	cmp	r3, #63	; 0x3f
 800094c:	d80c      	bhi.n	8000968 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 800094e:	4b41      	ldr	r3, [pc, #260]	; (8000a54 <GPIO_IRQInterruptConfig+0x144>)
 8000950:	681b      	ldr	r3, [r3, #0]
 8000952:	79fa      	ldrb	r2, [r7, #7]
 8000954:	f002 021f 	and.w	r2, r2, #31
 8000958:	2101      	movs	r1, #1
 800095a:	fa01 f202 	lsl.w	r2, r1, r2
 800095e:	4611      	mov	r1, r2
 8000960:	4a3c      	ldr	r2, [pc, #240]	; (8000a54 <GPIO_IRQInterruptConfig+0x144>)
 8000962:	430b      	orrs	r3, r1
 8000964:	6013      	str	r3, [r2, #0]
 8000966:	e06e      	b.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
		else if(IRQNumber >= 64 && IRQNumber < 96) //64 to 95
 8000968:	79fb      	ldrb	r3, [r7, #7]
 800096a:	2b3f      	cmp	r3, #63	; 0x3f
 800096c:	d90f      	bls.n	800098e <GPIO_IRQInterruptConfig+0x7e>
 800096e:	79fb      	ldrb	r3, [r7, #7]
 8000970:	2b5f      	cmp	r3, #95	; 0x5f
 8000972:	d80c      	bhi.n	800098e <GPIO_IRQInterruptConfig+0x7e>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 8000974:	4b38      	ldr	r3, [pc, #224]	; (8000a58 <GPIO_IRQInterruptConfig+0x148>)
 8000976:	681b      	ldr	r3, [r3, #0]
 8000978:	79fa      	ldrb	r2, [r7, #7]
 800097a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800097e:	2101      	movs	r1, #1
 8000980:	fa01 f202 	lsl.w	r2, r1, r2
 8000984:	4611      	mov	r1, r2
 8000986:	4a34      	ldr	r2, [pc, #208]	; (8000a58 <GPIO_IRQInterruptConfig+0x148>)
 8000988:	430b      	orrs	r3, r1
 800098a:	6013      	str	r3, [r2, #0]
 800098c:	e05b      	b.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
		else if(IRQNumber >= 96 && IRQNumber < 128) //96 to 127
 800098e:	79fb      	ldrb	r3, [r7, #7]
 8000990:	2b5f      	cmp	r3, #95	; 0x5f
 8000992:	d958      	bls.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
 8000994:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000998:	2b00      	cmp	r3, #0
 800099a:	db54      	blt.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
			*NVIC_ISER3 |= (1 << (IRQNumber % 128));
 800099c:	4b2f      	ldr	r3, [pc, #188]	; (8000a5c <GPIO_IRQInterruptConfig+0x14c>)
 800099e:	681b      	ldr	r3, [r3, #0]
 80009a0:	79fa      	ldrb	r2, [r7, #7]
 80009a2:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80009a6:	2101      	movs	r1, #1
 80009a8:	fa01 f202 	lsl.w	r2, r1, r2
 80009ac:	4611      	mov	r1, r2
 80009ae:	4a2b      	ldr	r2, [pc, #172]	; (8000a5c <GPIO_IRQInterruptConfig+0x14c>)
 80009b0:	430b      	orrs	r3, r1
 80009b2:	6013      	str	r3, [r2, #0]
}
 80009b4:	e047      	b.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
		if (IRQNumber <= 31)
 80009b6:	79fb      	ldrb	r3, [r7, #7]
 80009b8:	2b1f      	cmp	r3, #31
 80009ba:	d80a      	bhi.n	80009d2 <GPIO_IRQInterruptConfig+0xc2>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80009bc:	4b28      	ldr	r3, [pc, #160]	; (8000a60 <GPIO_IRQInterruptConfig+0x150>)
 80009be:	681b      	ldr	r3, [r3, #0]
 80009c0:	79fa      	ldrb	r2, [r7, #7]
 80009c2:	2101      	movs	r1, #1
 80009c4:	fa01 f202 	lsl.w	r2, r1, r2
 80009c8:	4611      	mov	r1, r2
 80009ca:	4a25      	ldr	r2, [pc, #148]	; (8000a60 <GPIO_IRQInterruptConfig+0x150>)
 80009cc:	430b      	orrs	r3, r1
 80009ce:	6013      	str	r3, [r2, #0]
}
 80009d0:	e039      	b.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
		else if(IRQNumber > 31 && IRQNumber < 64) //32 to 63
 80009d2:	79fb      	ldrb	r3, [r7, #7]
 80009d4:	2b1f      	cmp	r3, #31
 80009d6:	d90f      	bls.n	80009f8 <GPIO_IRQInterruptConfig+0xe8>
 80009d8:	79fb      	ldrb	r3, [r7, #7]
 80009da:	2b3f      	cmp	r3, #63	; 0x3f
 80009dc:	d80c      	bhi.n	80009f8 <GPIO_IRQInterruptConfig+0xe8>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80009de:	4b21      	ldr	r3, [pc, #132]	; (8000a64 <GPIO_IRQInterruptConfig+0x154>)
 80009e0:	681b      	ldr	r3, [r3, #0]
 80009e2:	79fa      	ldrb	r2, [r7, #7]
 80009e4:	f002 021f 	and.w	r2, r2, #31
 80009e8:	2101      	movs	r1, #1
 80009ea:	fa01 f202 	lsl.w	r2, r1, r2
 80009ee:	4611      	mov	r1, r2
 80009f0:	4a1c      	ldr	r2, [pc, #112]	; (8000a64 <GPIO_IRQInterruptConfig+0x154>)
 80009f2:	430b      	orrs	r3, r1
 80009f4:	6013      	str	r3, [r2, #0]
 80009f6:	e026      	b.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
		else if(IRQNumber >= 64 && IRQNumber < 96) //64 to 95
 80009f8:	79fb      	ldrb	r3, [r7, #7]
 80009fa:	2b3f      	cmp	r3, #63	; 0x3f
 80009fc:	d90f      	bls.n	8000a1e <GPIO_IRQInterruptConfig+0x10e>
 80009fe:	79fb      	ldrb	r3, [r7, #7]
 8000a00:	2b5f      	cmp	r3, #95	; 0x5f
 8000a02:	d80c      	bhi.n	8000a1e <GPIO_IRQInterruptConfig+0x10e>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000a04:	4b18      	ldr	r3, [pc, #96]	; (8000a68 <GPIO_IRQInterruptConfig+0x158>)
 8000a06:	681b      	ldr	r3, [r3, #0]
 8000a08:	79fa      	ldrb	r2, [r7, #7]
 8000a0a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000a0e:	2101      	movs	r1, #1
 8000a10:	fa01 f202 	lsl.w	r2, r1, r2
 8000a14:	4611      	mov	r1, r2
 8000a16:	4a14      	ldr	r2, [pc, #80]	; (8000a68 <GPIO_IRQInterruptConfig+0x158>)
 8000a18:	430b      	orrs	r3, r1
 8000a1a:	6013      	str	r3, [r2, #0]
 8000a1c:	e013      	b.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
		else if(IRQNumber >= 96 && IRQNumber < 128) //96 to 127
 8000a1e:	79fb      	ldrb	r3, [r7, #7]
 8000a20:	2b5f      	cmp	r3, #95	; 0x5f
 8000a22:	d910      	bls.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
 8000a24:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000a28:	2b00      	cmp	r3, #0
 8000a2a:	db0c      	blt.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
			*NVIC_ICER3 |= (1 << (IRQNumber % 128));
 8000a2c:	4b0f      	ldr	r3, [pc, #60]	; (8000a6c <GPIO_IRQInterruptConfig+0x15c>)
 8000a2e:	681b      	ldr	r3, [r3, #0]
 8000a30:	79fa      	ldrb	r2, [r7, #7]
 8000a32:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8000a36:	2101      	movs	r1, #1
 8000a38:	fa01 f202 	lsl.w	r2, r1, r2
 8000a3c:	4611      	mov	r1, r2
 8000a3e:	4a0b      	ldr	r2, [pc, #44]	; (8000a6c <GPIO_IRQInterruptConfig+0x15c>)
 8000a40:	430b      	orrs	r3, r1
 8000a42:	6013      	str	r3, [r2, #0]
}
 8000a44:	e7ff      	b.n	8000a46 <GPIO_IRQInterruptConfig+0x136>
 8000a46:	bf00      	nop
 8000a48:	370c      	adds	r7, #12
 8000a4a:	46bd      	mov	sp, r7
 8000a4c:	bc80      	pop	{r7}
 8000a4e:	4770      	bx	lr
 8000a50:	e000e100 	.word	0xe000e100
 8000a54:	e000e104 	.word	0xe000e104
 8000a58:	e000e108 	.word	0xe000e108
 8000a5c:	e000e10c 	.word	0xe000e10c
 8000a60:	e000e180 	.word	0xe000e180
 8000a64:	e000e184 	.word	0xe000e184
 8000a68:	e000e188 	.word	0xe000e188
 8000a6c:	e000e18c 	.word	0xe000e18c

08000a70 <GPIO_IRQPriorityConfig>:
 * @return				- none
 *
 * @Note 				- none
 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000a70:	b480      	push	{r7}
 8000a72:	b085      	sub	sp, #20
 8000a74:	af00      	add	r7, sp, #0
 8000a76:	4603      	mov	r3, r0
 8000a78:	6039      	str	r1, [r7, #0]
 8000a7a:	71fb      	strb	r3, [r7, #7]
	//1. Find out the IPR register
	uint8_t iprx = IRQNumber/4;
 8000a7c:	79fb      	ldrb	r3, [r7, #7]
 8000a7e:	089b      	lsrs	r3, r3, #2
 8000a80:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber%4;
 8000a82:	79fb      	ldrb	r3, [r7, #7]
 8000a84:	f003 0303 	and.w	r3, r3, #3
 8000a88:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 8000a8a:	7bbb      	ldrb	r3, [r7, #14]
 8000a8c:	00db      	lsls	r3, r3, #3
 8000a8e:	b2db      	uxtb	r3, r3
 8000a90:	3304      	adds	r3, #4
 8000a92:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000a94:	7bfb      	ldrb	r3, [r7, #15]
 8000a96:	009a      	lsls	r2, r3, #2
 8000a98:	4b08      	ldr	r3, [pc, #32]	; (8000abc <GPIO_IRQPriorityConfig+0x4c>)
 8000a9a:	4413      	add	r3, r2
 8000a9c:	6819      	ldr	r1, [r3, #0]
 8000a9e:	7b7b      	ldrb	r3, [r7, #13]
 8000aa0:	683a      	ldr	r2, [r7, #0]
 8000aa2:	409a      	lsls	r2, r3
 8000aa4:	7bfb      	ldrb	r3, [r7, #15]
 8000aa6:	0098      	lsls	r0, r3, #2
 8000aa8:	4b04      	ldr	r3, [pc, #16]	; (8000abc <GPIO_IRQPriorityConfig+0x4c>)
 8000aaa:	4403      	add	r3, r0
 8000aac:	430a      	orrs	r2, r1
 8000aae:	601a      	str	r2, [r3, #0]
}
 8000ab0:	bf00      	nop
 8000ab2:	3714      	adds	r7, #20
 8000ab4:	46bd      	mov	sp, r7
 8000ab6:	bc80      	pop	{r7}
 8000ab8:	4770      	bx	lr
 8000aba:	bf00      	nop
 8000abc:	e000e400 	.word	0xe000e400

08000ac0 <GPIO_IRQHandling>:
 * @return				- none
 *
 * @Note 				- none
 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000ac0:	b480      	push	{r7}
 8000ac2:	b083      	sub	sp, #12
 8000ac4:	af00      	add	r7, sp, #0
 8000ac6:	4603      	mov	r3, r0
 8000ac8:	71fb      	strb	r3, [r7, #7]
	//clear EXTI pr register corresponding to the pin number
	if (EXTI->PR & (1 << PinNumber))
 8000aca:	4b0c      	ldr	r3, [pc, #48]	; (8000afc <GPIO_IRQHandling+0x3c>)
 8000acc:	695b      	ldr	r3, [r3, #20]
 8000ace:	79fa      	ldrb	r2, [r7, #7]
 8000ad0:	2101      	movs	r1, #1
 8000ad2:	fa01 f202 	lsl.w	r2, r1, r2
 8000ad6:	4013      	ands	r3, r2
 8000ad8:	2b00      	cmp	r3, #0
 8000ada:	d009      	beq.n	8000af0 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= (1 << PinNumber);
 8000adc:	4b07      	ldr	r3, [pc, #28]	; (8000afc <GPIO_IRQHandling+0x3c>)
 8000ade:	695b      	ldr	r3, [r3, #20]
 8000ae0:	79fa      	ldrb	r2, [r7, #7]
 8000ae2:	2101      	movs	r1, #1
 8000ae4:	fa01 f202 	lsl.w	r2, r1, r2
 8000ae8:	4611      	mov	r1, r2
 8000aea:	4a04      	ldr	r2, [pc, #16]	; (8000afc <GPIO_IRQHandling+0x3c>)
 8000aec:	430b      	orrs	r3, r1
 8000aee:	6153      	str	r3, [r2, #20]
	}
}
 8000af0:	bf00      	nop
 8000af2:	370c      	adds	r7, #12
 8000af4:	46bd      	mov	sp, r7
 8000af6:	bc80      	pop	{r7}
 8000af8:	4770      	bx	lr
 8000afa:	bf00      	nop
 8000afc:	40013c00 	.word	0x40013c00

08000b00 <memset>:
 8000b00:	4402      	add	r2, r0
 8000b02:	4603      	mov	r3, r0
 8000b04:	4293      	cmp	r3, r2
 8000b06:	d100      	bne.n	8000b0a <memset+0xa>
 8000b08:	4770      	bx	lr
 8000b0a:	f803 1b01 	strb.w	r1, [r3], #1
 8000b0e:	e7f9      	b.n	8000b04 <memset+0x4>

08000b10 <__libc_init_array>:
 8000b10:	b570      	push	{r4, r5, r6, lr}
 8000b12:	4d0d      	ldr	r5, [pc, #52]	; (8000b48 <__libc_init_array+0x38>)
 8000b14:	4c0d      	ldr	r4, [pc, #52]	; (8000b4c <__libc_init_array+0x3c>)
 8000b16:	1b64      	subs	r4, r4, r5
 8000b18:	10a4      	asrs	r4, r4, #2
 8000b1a:	2600      	movs	r6, #0
 8000b1c:	42a6      	cmp	r6, r4
 8000b1e:	d109      	bne.n	8000b34 <__libc_init_array+0x24>
 8000b20:	4d0b      	ldr	r5, [pc, #44]	; (8000b50 <__libc_init_array+0x40>)
 8000b22:	4c0c      	ldr	r4, [pc, #48]	; (8000b54 <__libc_init_array+0x44>)
 8000b24:	f000 f818 	bl	8000b58 <_init>
 8000b28:	1b64      	subs	r4, r4, r5
 8000b2a:	10a4      	asrs	r4, r4, #2
 8000b2c:	2600      	movs	r6, #0
 8000b2e:	42a6      	cmp	r6, r4
 8000b30:	d105      	bne.n	8000b3e <__libc_init_array+0x2e>
 8000b32:	bd70      	pop	{r4, r5, r6, pc}
 8000b34:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b38:	4798      	blx	r3
 8000b3a:	3601      	adds	r6, #1
 8000b3c:	e7ee      	b.n	8000b1c <__libc_init_array+0xc>
 8000b3e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b42:	4798      	blx	r3
 8000b44:	3601      	adds	r6, #1
 8000b46:	e7f2      	b.n	8000b2e <__libc_init_array+0x1e>
 8000b48:	08000b70 	.word	0x08000b70
 8000b4c:	08000b70 	.word	0x08000b70
 8000b50:	08000b70 	.word	0x08000b70
 8000b54:	08000b74 	.word	0x08000b74

08000b58 <_init>:
 8000b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b5a:	bf00      	nop
 8000b5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b5e:	bc08      	pop	{r3}
 8000b60:	469e      	mov	lr, r3
 8000b62:	4770      	bx	lr

08000b64 <_fini>:
 8000b64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b66:	bf00      	nop
 8000b68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b6a:	bc08      	pop	{r3}
 8000b6c:	469e      	mov	lr, r3
 8000b6e:	4770      	bx	lr
